[{"D:\\Social-network\\my-app\\src\\index.tsx":"1","D:\\Social-network\\my-app\\src\\features\\TodolistsList\\TodolistsList.tsx":"2","D:\\Social-network\\my-app\\src\\features\\TodolistsList\\todolists-reducer.ts":"3","D:\\Social-network\\my-app\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"4","D:\\Social-network\\my-app\\src\\api\\todolists-api.ts":"5","D:\\Social-network\\my-app\\src\\app\\App.tsx":"6","D:\\Social-network\\my-app\\src\\components\\EditableSpan\\EditableSpan.tsx":"7","D:\\Social-network\\my-app\\src\\features\\Login\\Login.tsx":"8","D:\\Social-network\\my-app\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"9","D:\\Social-network\\my-app\\src\\features\\Login\\auth-reducer.ts":"10","D:\\Social-network\\my-app\\src\\app\\store.ts":"11","D:\\Social-network\\my-app\\src\\features\\TodolistsList\\tasks-reducer.ts":"12","D:\\Social-network\\my-app\\src\\app\\app-reducer.ts":"13"},{"size":734,"mtime":1628784079029,"results":"14","hashOfConfig":"15"},{"size":4022,"mtime":1628792138387,"results":"16","hashOfConfig":"15"},{"size":4550,"mtime":1628788936351,"results":"17","hashOfConfig":"15"},{"size":1773,"mtime":1596295538000,"results":"18","hashOfConfig":"15"},{"size":2661,"mtime":1628792751211,"results":"19","hashOfConfig":"15"},{"size":1842,"mtime":1628792948157,"results":"20","hashOfConfig":"15"},{"size":952,"mtime":1594154724000,"results":"21","hashOfConfig":"15"},{"size":3196,"mtime":1628792102300,"results":"22","hashOfConfig":"15"},{"size":1092,"mtime":1596716576000,"results":"23","hashOfConfig":"15"},{"size":1366,"mtime":1628790219852,"results":"24","hashOfConfig":"15"},{"size":1182,"mtime":1628790689439,"results":"25","hashOfConfig":"15"},{"size":5633,"mtime":1596722126000,"results":"26","hashOfConfig":"15"},{"size":1677,"mtime":1628792807463,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"ay4fgc",{"filePath":"31","messages":"32","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Social-network\\my-app\\src\\index.tsx",[],["57","58"],"D:\\Social-network\\my-app\\src\\features\\TodolistsList\\TodolistsList.tsx",["59","60","61","62","63","64","65","66"],"D:\\Social-network\\my-app\\src\\features\\TodolistsList\\todolists-reducer.ts",["67"],"import {todolistsAPI, TodolistType} from '../../api/todolists-api'\r\nimport {Dispatch} from 'redux'\r\nimport {\r\n  RequestStatusType,\r\n  setAppStatusAC,\r\n  SetAppStatusActionType\r\n} from '../../app/app-reducer'\r\n\r\nconst initialState: Array<TodolistDomainType> = []\r\n\r\nexport const todolistsReducer = (state: Array<TodolistDomainType> = initialState, action: ActionsType): Array<TodolistDomainType> => {\r\n  switch (action.type) {\r\n    case 'REMOVE-TODOLIST':\r\n      return state.filter(tl => tl.id != action.id)\r\n    case 'ADD-TODOLIST':\r\n      return [{\r\n        ...action.todolist,\r\n        filter: 'all',\r\n        entityStatus: 'idle'\r\n      }, ...state]\r\n\r\n    case 'CHANGE-TODOLIST-TITLE':\r\n      return state.map(tl => tl.id === action.id ? {\r\n        ...tl,\r\n        title: action.title\r\n      } : tl)\r\n    case 'CHANGE-TODOLIST-FILTER':\r\n      return state.map(tl => tl.id === action.id ? {\r\n        ...tl,\r\n        filter: action.filter\r\n      } : tl)\r\n    case 'CHANGE-TODOLIST-ENTITY-STATUS':\r\n      return state.map(tl => tl.id === action.id ? {\r\n        ...tl,\r\n        entityStatus: action.status\r\n      } : tl)\r\n    case 'SET-TODOLISTS':\r\n      return action.todolists.map(tl => ({\r\n        ...tl,\r\n        filter: 'all',\r\n        entityStatus: 'idle'\r\n      }))\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// actions\r\nexport const removeTodolistAC = (id: string) => ({\r\n  type: 'REMOVE-TODOLIST',\r\n  id\r\n} as const)\r\nexport const addTodolistAC = (todolist: TodolistType) => ({\r\n  type: 'ADD-TODOLIST',\r\n  todolist\r\n} as const)\r\nexport const changeTodolistTitleAC = (id: string, title: string) => ({\r\n  type: 'CHANGE-TODOLIST-TITLE',\r\n  id,\r\n  title\r\n} as const)\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType) => ({\r\n  type: 'CHANGE-TODOLIST-FILTER',\r\n  id,\r\n  filter\r\n} as const)\r\nexport const changeTodolistEntityStatusAC = (id: string, status: RequestStatusType) => ({\r\n  type: 'CHANGE-TODOLIST-ENTITY-STATUS', id, status\r\n} as const)\r\nexport const setTodolistsAC = (todolists: Array<TodolistType>) => ({\r\n  type: 'SET-TODOLISTS',\r\n  todolists\r\n} as const)\r\n\r\n// thunks\r\nexport const fetchTodolistsTC = () => {\r\n  return (dispatch: ThunkDispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    todolistsAPI.getTodolists()\r\n        .then((res) => {\r\n          dispatch(setTodolistsAC(res.data))\r\n          dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n  }\r\n}\r\nexport const removeTodolistTC = (todolistId: string) => {\r\n  return (dispatch: ThunkDispatch) => {\r\n    //изменим глобальный статус приложения, чтобы вверху полоса побежала\r\n    dispatch(setAppStatusAC('loading'))\r\n    //изменим статус конкретного тудулиста, чтобы он мог задизеблить что надо\r\n    dispatch(changeTodolistEntityStatusAC(todolistId, 'loading'))\r\n    todolistsAPI.deleteTodolist(todolistId)\r\n        .then((res) => {\r\n          dispatch(removeTodolistAC(todolistId))\r\n          //скажем глобально приложению, что асинхронная операция завершена\r\n          dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n  }\r\n}\r\nexport const addTodolistTC = (title: string) => {\r\n  return (dispatch: ThunkDispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    todolistsAPI.createTodolist(title)\r\n        .then((res) => {\r\n          dispatch(addTodolistAC(res.data.data.item))\r\n          dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n  }\r\n}\r\nexport const changeTodolistTitleTC = (id: string, title: string) => {\r\n  return (dispatch: Dispatch<ActionsType>) => {\r\n    todolistsAPI.updateTodolist(id, title)\r\n        .then((res) => {\r\n          dispatch(changeTodolistTitleAC(id, title))\r\n        })\r\n  }\r\n}\r\n\r\n// types\r\nexport type AddTodolistActionType = ReturnType<typeof addTodolistAC>;\r\nexport type RemoveTodolistActionType = ReturnType<typeof removeTodolistAC>;\r\nexport type SetTodolistsActionType = ReturnType<typeof setTodolistsAC>;\r\ntype ActionsType =\r\n    | RemoveTodolistActionType\r\n    | AddTodolistActionType\r\n    | ReturnType<typeof changeTodolistTitleAC>\r\n    | ReturnType<typeof changeTodolistFilterAC>\r\n    | SetTodolistsActionType\r\n    | ReturnType<typeof changeTodolistEntityStatusAC>\r\nexport type FilterValuesType = 'all' | 'active' | 'completed';\r\nexport type TodolistDomainType = TodolistType & {\r\n  filter: FilterValuesType\r\n  entityStatus: RequestStatusType\r\n}\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType>\r\n","D:\\Social-network\\my-app\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["68","69","70"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","D:\\Social-network\\my-app\\src\\api\\todolists-api.ts",[],"D:\\Social-network\\my-app\\src\\app\\App.tsx",["71"],"D:\\Social-network\\my-app\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"D:\\Social-network\\my-app\\src\\features\\Login\\Login.tsx",["72"],"D:\\Social-network\\my-app\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],"D:\\Social-network\\my-app\\src\\features\\Login\\auth-reducer.ts",[],"D:\\Social-network\\my-app\\src\\app\\store.ts",[],"D:\\Social-network\\my-app\\src\\features\\TodolistsList\\tasks-reducer.ts",["73","74"],"D:\\Social-network\\my-app\\src\\app\\app-reducer.ts",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":36,"column":8,"nodeType":"81","endLine":36,"endColumn":10,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"83","line":41,"column":8,"nodeType":"81","endLine":41,"endColumn":10,"suggestions":"84"},{"ruleId":"79","severity":1,"message":"83","line":46,"column":8,"nodeType":"81","endLine":46,"endColumn":10,"suggestions":"85"},{"ruleId":"79","severity":1,"message":"83","line":51,"column":8,"nodeType":"81","endLine":51,"endColumn":10,"suggestions":"86"},{"ruleId":"79","severity":1,"message":"83","line":56,"column":8,"nodeType":"81","endLine":56,"endColumn":10,"suggestions":"87"},{"ruleId":"79","severity":1,"message":"83","line":61,"column":8,"nodeType":"81","endLine":61,"endColumn":10,"suggestions":"88"},{"ruleId":"79","severity":1,"message":"83","line":66,"column":8,"nodeType":"81","endLine":66,"endColumn":10,"suggestions":"89"},{"ruleId":"79","severity":1,"message":"83","line":71,"column":8,"nodeType":"81","endLine":71,"endColumn":10,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":14,"column":39,"nodeType":"93","messageId":"94","endLine":14,"endColumn":41},{"ruleId":"79","severity":1,"message":"95","line":15,"column":97,"nodeType":"81","endLine":15,"endColumn":130,"suggestions":"96"},{"ruleId":"79","severity":1,"message":"95","line":20,"column":8,"nodeType":"81","endLine":20,"endColumn":41,"suggestions":"97"},{"ruleId":"79","severity":1,"message":"95","line":24,"column":8,"nodeType":"81","endLine":24,"endColumn":41,"suggestions":"98"},{"ruleId":"79","severity":1,"message":"99","line":31,"column":6,"nodeType":"81","endLine":31,"endColumn":8,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":66,"column":18,"nodeType":"103","endLine":66,"endColumn":35},{"ruleId":"104","severity":1,"message":"105","line":5,"column":9,"nodeType":"106","messageId":"107","endLine":5,"endColumn":22},{"ruleId":"91","severity":1,"message":"92","line":13,"column":94,"nodeType":"93","messageId":"94","endLine":13,"endColumn":96},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["110"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["111"],["112"],["113"],["114"],["115"],["116"],["117"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["118"],["119"],["120"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["121"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","@typescript-eslint/no-unused-vars","'setAppErrorAC' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"124","fix":"126"},{"desc":"124","fix":"127"},{"desc":"124","fix":"128"},{"desc":"124","fix":"129"},{"desc":"124","fix":"130"},{"desc":"124","fix":"131"},{"desc":"132","fix":"133"},{"desc":"132","fix":"134"},{"desc":"132","fix":"135"},{"desc":"124","fix":"136"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"137","text":"138"},"Update the dependencies array to be: [dispatch]",{"range":"139","text":"140"},{"range":"141","text":"140"},{"range":"142","text":"140"},{"range":"143","text":"140"},{"range":"144","text":"140"},{"range":"145","text":"140"},{"range":"146","text":"140"},"Update the dependencies array to be: [props]",{"range":"147","text":"148"},{"range":"149","text":"148"},{"range":"150","text":"148"},{"range":"151","text":"140"},[1317,1319],"[demo, dispatch, isLoggedIn]",[1488,1490],"[dispatch]",[1659,1661],[1864,1866],[2077,2079],[2278,2280],[2425,2427],[2604,2606],[765,798],"[props]",[1071,1104],[1261,1294],[927,929]]